{"version":3,"sources":["components/source/FileLoader.module.css","components/snmp-options/VersionConfig.module.css","components/footer/Footer.module.css","store/index.js","actions/utils.js","actions/reduxFormActions.js","actions/discoverActions.js","actions/index.js","constants.js","helpers/utils.js","helpers/validators.js","helpers/discover.js","components/Config.js","components/source/Source.js","components/shared/RFInput.js","components/shared/RFSelect.js","components/shared/RFCheckbox.js","components/shared/RFRadio.js","components/source/SourceForm.js","components/source/FileLoader.js","components/source/IPInput.js","components/source/IPRange.js","components/source/index.js","components/options/Options.js","components/options/OptionsForm.js","components/options/index.js","components/snmp-options/SNMPOptions.js","components/snmp-options/VersionConfig.js","components/snmp-options/index.js","components/steps/Steps.js","components/steps/index.js","components/footer/Footer.js","components/footer/ConfigModal.js","components/footer/index.js","components/index.js","App.js","serviceWorker.js","index.js","reducers/discover.js","reducers/index.js","store/configureStore.prod.js"],"names":["module","exports","wrapper","input","file","radioGroup","title","require","utils","type","payload","arguments","length","undefined","Object","objectSpread","CUSTOM_VALIDATE_FAILURE","CUSTOM_VALIDATE_SUCCESS","customValidateFailure","field","message","action","customValidateSuccess","OPEN_MODAL","CLOSE_MODAL","openModal","config","closeModal","__webpack_require__","d","__webpack_exports__","reduxFormActions_namespaceObject","discoverActions_namespaceObject","SOURCES","key","text","value","OPTIONS","label","VERSIONS","id","ALGORITHMS","SECURITY_OPTIONS","ip2int","ip","split","reduce","ipInt","octet","parseInt","checkThatSourceCompleted","forms","values","get","inputType","ipAddress","startIPAddress","endIPAddress","fileName","getStep","form","open","isSourceCompleted","isSNMP","test","discover","source","options","result","snmpConfig","content","includes","version","snmpv1","snmpv2","snmpv3","concat","createSNMPConfig","optArray","entries","acc","_ref","_ref2","slicedToArray","toConsumableArray","createOptions","createSource","connect","snmp","react_default","a","createElement","Container","Grid","Responsive","as","Row","minWidth","steps","columns","Column","floated","mobile","tablet","computer","components_source","components_options","snmp_options","footer","Source","state","isOpen","handleClick","_this","setState","render","_this$props","props","ipRangeError","Segment","inverted","Accordion","Title","active","onClick","Icon","name","Content","source_SourceForm","PureComponent","defaultProps","RFInput","_ref$meta","meta","touched","error","size","Form","Input","assign","RFSelect","rest","objectWithoutProperties","Select","style","marginBottom","onChange","event","data","RFCheckbox","Field","Checkbox","checked","RFRadio","Fragment","map","Radio","SourceForm","onSubmit","e","preventDefault","redux_form_es","component","placeholder","fluid","selection","FileLoader","IPInput","source_IPRange","Message","header","reduxForm","React","createRef","current","click","onUpload","reader","FileReader","target","files","onloadend","Blob","readAsText","className","styles","ref","Button","color","IPIput","validate","validators","reduxFormActions","IPRange","componentDidUpdate","isValidStartIP","isValidEndIP","startIP","endIP","startIPError","endIPError","touchedStartIP","touchedEndIP","dispatch","bindActionCreators","Options","options_OptionsForm","destroyOnUnmount","SNMPOptions","snmp_options_VersionConfig","VersionConfig","ConnectedVersionConfig","Step","propTypes","step","PropTypes","number","Steps","Group","ordered","completed","classnames","Description","Footer","resetForms","keys","forEach","footer_ConfigModal","onClose","_ref2$discover","reset","discoverActions","ConfigModal","Modal","closeIcon","Header","scrolling","main_default","src","displayDataTypes","displayObjectSize","enableClipboard","Config","store","configureStore","App","es","components","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","initialState","formReducer","plugin","actions","syncErrors","defineProperty","combineReducers","createStore","rootReducer"],"mappings":"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","file":"static/js/main.c6c696e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FileLoader_wrapper___zgzk\",\"input\":\"FileLoader_input__2xdRl\",\"file\":\"FileLoader_file__2F9P_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioGroup\":\"VersionConfig_radioGroup__3vqut\",\"title\":\"VersionConfig_title__HXfwH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Footer_wrapper__2ZbJk\"};","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./configureStore.prod'); // eslint-disable-line global-require\n} else {\n  module.exports = require('./configureStore.dev'); // eslint-disable-line global-require\n}\n","export default (type, payload = {}) => ({ type, ...payload });\n","import action from './utils';\n\nexport const CUSTOM_VALIDATE_FAILURE = 'CUSTOM_VALIDATE_FAILURE';\nexport const CUSTOM_VALIDATE_SUCCESS = 'CUSTOM_VALIDATE_SUCCESS';\n\nexport const customValidateFailure = (field, message) =>\n  action(CUSTOM_VALIDATE_FAILURE, {\n    field,\n    message,\n  });\n\nexport const customValidateSuccess = (field) =>\n  action(CUSTOM_VALIDATE_SUCCESS, { field });\n","import action from './utils';\n\nexport const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const openModal = (config) =>\n  action(OPEN_MODAL, {\n    config,\n  });\n\nexport const closeModal = () => action(CLOSE_MODAL, {});\n","import * as reduxFormActions from './reduxFormActions';\nimport * as discoverActions from './discoverActions';\n\nexport { reduxFormActions, discoverActions };\n","export const SOURCES = [\n  {\n    key: 'IP',\n    text: 'IP',\n    value: 'IP',\n  },\n  {\n    key: 'IP Range',\n    text: 'IP Range',\n    value: 'IP Range',\n  },\n  {\n    key: 'CSV',\n    text: 'CSV',\n    value: 'CSV',\n  },\n];\n\nexport const OPTIONS = [\n  {\n    label: 'SNMP',\n    value: 'SNMP',\n  },\n  {\n    label: 'Link',\n    value: 'Link',\n  },\n  {\n    label: 'VLAN',\n    value: 'VLAN',\n  },\n  {\n    label: 'Ports',\n    value: 'Ports',\n  },\n];\n\nexport const VERSIONS = [\n  { id: 'version-1', label: 'V1', value: '1' },\n  { id: 'version-2', label: 'V2', value: '2' },\n  { id: 'version-3', label: 'V3', value: '3' },\n];\n\nexport const ALGORITHMS = [\n  { id: 'alg-md5', label: 'MD5', value: 'md5' },\n  { id: 'alg-sha', label: 'SHA', value: 'sha' },\n  { id: 'alg-hmac128', label: 'HMAC128', value: 'hmac128' },\n  { id: 'alg-hmac192', label: 'HMAC192', value: 'hmac192' },\n  { id: 'alg-hmac256', label: 'HMAC256', value: 'hmac256' },\n  { id: 'alg-hmac384', label: 'HMAC384', value: 'hmac384' },\n];\n\nexport const SECURITY_OPTIONS = [\n  {\n    key: 'AuthNoPrivacy',\n    text: 'Authentication and No Privacy',\n    value: 'Authentication and No Privacy',\n  },\n];\n\nexport const IP = 'IP';\nexport const IP_RANGE = 'IP Range';\nexport const CSV = 'CSV';\n","import get from 'lodash.get';\n\nimport { IP, IP_RANGE, CSV } from '../constants';\n\nexport const ip2int = (ip) =>\n  // eslint-disable-next-line\n  ip\n    .split('.')\n    .reduce((ipInt, octet) => \n      // eslint-disable-next-line\n      (ipInt << 8) + parseInt(octet, 10),\n    0,\n  ) >>> 0;\n\nexport const checkThatSourceCompleted = (forms) => {\n  const values = get(forms, 'source.values', null);\n  const inputType = get(forms, 'source.values.inputType', null);\n\n  if (!values || !inputType) return false;\n\n  switch (inputType) {\n    case IP:\n      return !!values.ipAddress;\n    case IP_RANGE:\n      return !!values.startIPAddress && !!values.endIPAddress;\n    case CSV:\n      return !!values.fileName;\n    default:\n      return false;\n  }\n};\n\nexport const getStep = (form, open) => {\n  const isSourceCompleted = checkThatSourceCompleted(form);\n  const isSNMP = get(form, 'options.values.SNMP', false);\n\n  if (!isSourceCompleted) return 1;\n  if (isSourceCompleted && !isSNMP) return 2;\n  if (isSourceCompleted && isSNMP && !open) return 3;\n  if (isSourceCompleted && isSNMP && open) return 4;\n  return 0;\n};\n","// eslint-disable-next-line\nexport const ip = (value) =>\n  value &&\n  !/^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/g.test(\n    value,\n  )\n    ? 'Invalid IP adress'\n    : undefined;\n","import get from 'lodash.get';\n\nimport { IP, IP_RANGE, CSV } from '../constants';\n\nexport const createSource = (source, config) => {\n  const result = { ...config };\n\n  if (source) {\n    const { inputType } = source;\n    result.inputType = inputType;\n\n    switch (inputType) {\n      case IP:\n        result.ipAddress = get(source, 'ipAddress', null);\n        break;\n      case IP_RANGE:\n        result.startIPAddress = get(source, 'startIPAddress', null);\n        result.endIPAddress = get(source, 'endIPAddress', null);\n        break;\n      case CSV:\n        result.fileName = get(source, 'fileName', null);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return result;\n};\n\nexport const createOptions = (options, config) => {\n  const result = { ...config };\n  const optArray =\n    options &&\n    Object.entries(options).reduce((acc, [key, value]) => {\n      if (value) {\n        return [...acc, key];\n      }\n      return acc;\n    }, []);\n\n  result.options = optArray && optArray.length ? optArray : null;\n\n  return result;\n};\n\nexport const createSNMPConfig = (snmpConfig, config) => {\n  const result = { ...config };\n  if (snmpConfig && result.options && result.options.includes('SNMP')) {\n    const { version } = snmpConfig;\n    const initConfigs = {\n      snmpv1: null,\n      snmpv2: null,\n      snmpv3: null,\n    };\n    result.snmpConfig = { ...snmpConfig, ...initConfigs };\n    result.snmpConfig[`snmpv${version}`] = get(\n      snmpConfig,\n      `snmpv${version}`,\n      null,\n    );\n  }\n  return result;\n};\n\nexport default (forms) => {\n  const source = get(forms, 'source.values', null);\n  const options = get(forms, 'options.values', null);\n  const snmpConfig = get(forms, 'snmpConfig.values', null);\n\n  let result = {\n    inputType: null,\n    options: null,\n    snmpConfig: null,\n  };\n\n  result = createSource(source, result);\n  result = createOptions(options, result);\n  result = createSNMPConfig(snmpConfig, result);\n  return { content: result };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Grid, Responsive } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport get from 'lodash.get';\n\nimport { Source, Options, SNMPOptions, Steps, Footer } from './index';\nimport { utils } from '../helpers';\n\nconst Config = ({ snmp, isSourceCompleted }) => (\n  <Container>\n    <Grid>\n      <Responsive as={Grid.Row} minWidth={768}>\n        <Steps />\n      </Responsive>\n      <Grid.Row columns={2}>\n        <Grid.Column floated=\"left\" mobile={16} tablet={8} computer={7}>\n          <Source />\n        </Grid.Column>\n        <Grid.Column floated=\"right\" mobile={16} tablet={8} computer={7}>\n          {isSourceCompleted && <Options />}\n        </Grid.Column>\n      </Grid.Row>\n      {isSourceCompleted && snmp && (\n        <Grid.Row>\n          <Grid.Column>\n            <SNMPOptions />\n          </Grid.Column>\n        </Grid.Row>\n      )}\n      <Grid.Row>\n        <Grid.Column>\n          <Footer />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </Container>\n);\n\nConfig.propTypes = {\n  isSourceCompleted: PropTypes.bool.isRequired,\n  snmp: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = ({ form }) => ({\n  isSourceCompleted: utils.checkThatSourceCompleted(form),\n  snmp: get(form, 'options.values.SNMP', false),\n});\n\nexport default connect(mapStateToProps)(Config);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Accordion, Icon } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport get from 'lodash.get';\n\nimport { SourceForm } from './index';\n\nclass Source extends PureComponent {\n  static propTypes = {\n    source: PropTypes.string,\n    ipRangeError: PropTypes.string,\n  };\n\n  static defaultProps = {\n    source: null,\n    ipRangeError: null,\n  };\n\n  state = {\n    isOpen: true,\n  };\n\n  handleClick = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render = () => {\n    const { isOpen } = this.state;\n    const { source, ipRangeError } = this.props;\n\n    return (\n      <Segment inverted>\n        <Accordion inverted>\n          <Accordion.Title active={isOpen} onClick={this.handleClick}>\n            <Icon name=\"dropdown\" />\n            Discovery Source\n          </Accordion.Title>\n          <Accordion.Content active={isOpen}>\n            <SourceForm source={source} ipRangeError={ipRangeError} />\n          </Accordion.Content>\n        </Accordion>\n      </Segment>\n    );\n  };\n}\n\nconst mapStateToProps = (state) => ({\n  source: get(state, 'form.source.values.inputType', null),\n  ipRangeError: get(state, 'form.source.syncErrors.ipRange', null),\n});\n\nexport default connect(mapStateToProps)(Source);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'semantic-ui-react';\n\nconst RFInput = ({ input, meta: { touched, error }, label, size }) => (\n  <Form.Input {...input} label={label} size={size} error={touched && !!error} />\n);\n\nRFInput.propTypes = {\n  label: PropTypes.string,\n};\n\nRFInput.defaultProps = {\n  label: '',\n};\n\nexport default RFInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from 'semantic-ui-react';\n\nconst RFSelect = ({ input, meta, ...rest }) => (\n  <Select\n    {...input}\n    style={{ marginBottom: '1em' }}\n    onChange={(event, data) => input.onChange(data.value)}\n    {...rest}\n  />\n);\n\nRFSelect.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default RFSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Checkbox } from 'semantic-ui-react';\n\nconst RFCheckbox = ({ input, label, meta, ...rest }) => (\n  <Form.Field>\n    <Checkbox\n      label={label}\n      checked={!!input.value}\n      onClick={(event, data) => input.onChange(data.checked)}\n      {...rest}\n    />\n  </Form.Field>\n);\n\nRFCheckbox.propTypes = {\n  label: PropTypes.string,\n};\n\nRFCheckbox.defaultProps = {\n  label: '',\n};\n\nexport default RFCheckbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Radio } from 'semantic-ui-react';\n\nexport const RFRadio = ({ input, options }) => (\n  <React.Fragment>\n    {options.map(({ id, label, value }) => (\n      <Radio\n        key={id}\n        id={id}\n        label={label}\n        {...input}\n        value={value}\n        checked={value === input.value}\n      />\n    ))}\n  </React.Fragment>\n);\n\nRFRadio.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default RFRadio;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Message } from 'semantic-ui-react';\nimport { reduxForm, Field } from 'redux-form';\nimport { SOURCES } from '../../constants';\n\nimport { RFSelect } from '../shared';\nimport { FileLoader, IPInput, IPRange } from './index';\n\nconst SourceForm = ({ source, ipRangeError }) => (\n  <Form error={!!ipRangeError} inverted onSubmit={(e) => e.preventDefault()}>\n    <Field\n      name=\"inputType\"\n      component={RFSelect}\n      placeholder=\"Select source\"\n      fluid\n      selection\n      options={SOURCES}\n    />\n    {source === 'CSV' && <Field name=\"fileName\" component={FileLoader} />}\n    {source === 'IP' && <IPInput name=\"ipAddress\" label=\"IP\" />}\n    {source === 'IP Range' && <IPRange />}\n    {ipRangeError && (\n      <Message error header=\"IP Range Error\" content={ipRangeError} />\n    )}\n  </Form>\n);\n\nSourceForm.propTypes = {\n  source: PropTypes.string,\n  ipRangeError: PropTypes.string,\n};\n\nSourceForm.defaultProps = {\n  source: null,\n  ipRangeError: null,\n};\n\nexport default reduxForm({\n  form: 'source',\n})(SourceForm);\n","import React, { PureComponent } from 'react';\nimport { Button } from 'semantic-ui-react';\n\nimport styles from './FileLoader.module.css';\n\nclass FileLoader extends PureComponent {\n  // eslint-disable-next-line\n  input = React.createRef();\n\n  onClick = () => {\n    this.input.current.click();\n  };\n\n  onUpload = (e) => {\n    e.preventDefault();\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.props.input.onChange(file.name);\n    };\n\n    if (file instanceof Blob) {\n      reader.readAsText(file);\n    }\n  };\n\n  render = () => (\n    <div className={styles.wrapper}>\n      <input\n        onChange={this.onUpload}\n        ref={this.input}\n        className={styles.input}\n        type=\"file\"\n      />\n      <Button type=\"button\" color=\"teal\" onClick={this.onClick}>\n        Select a file...\n      </Button>\n      {this.props.input.value && (\n        <div className={styles.file}>\n          Selected file: <i>{this.props.input.value}</i>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FileLoader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'redux-form';\n\nimport { RFInput } from '../shared';\nimport { validators } from '../../helpers';\n\nconst IPIput = ({ label, name }) => (\n  <Field\n    name={name}\n    label={label}\n    validate={validators.ip}\n    size=\"small\"\n    component={RFInput}\n  />\n);\n\nIPIput.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n};\n\nIPIput.defaultProps = {\n  name: '',\n  label: '',\n};\n\nexport default IPIput;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport get from 'lodash.get';\n\nimport { IPInput } from './index';\nimport { reduxFormActions } from '../../actions';\nimport { utils } from '../../helpers';\n\nconst { customValidateFailure, customValidateSuccess } = reduxFormActions;\n\nconst message =\n  'Starting IP address cannot be larger than the Ending IP Address.';\n\nclass IPRange extends PureComponent {\n  static propTypes = {\n    startIP: PropTypes.string,\n    endIP: PropTypes.string,\n    isValidStartIP: PropTypes.bool,\n    isValidEndIP: PropTypes.bool,\n    customValidateFailure: PropTypes.func.isRequired,\n    customValidateSuccess: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    startIP: null,\n    endIP: null,\n    isValidStartIP: false,\n    isValidEndIP: false,\n  };\n\n  componentDidUpdate = () => {\n    const { isValidStartIP, isValidEndIP, startIP, endIP } = this.props;\n\n    if (isValidStartIP && isValidEndIP) {\n      if (utils.ip2int(startIP) < utils.ip2int(endIP)) {\n        this.props.customValidateSuccess('ipRange');\n      } else {\n        this.props.customValidateFailure('ipRange', message);\n      }\n    }\n  };\n\n  render = () => (\n    <React.Fragment>\n      <IPInput name=\"startIPAddress\" label=\"Starting IP Address\" />\n      <IPInput name=\"endIPAddress\" label=\"Ending IP Address\" />\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const startIP = get(state, 'form.source.values.startIPAddress', null);\n  const endIP = get(state, 'form.source.values.endIPAddress', null);\n  const startIPError = !!get(\n    state,\n    'form.source.syncErrors.startIPAddress',\n    false,\n  );\n  const endIPError = !!get(state, 'form.source.syncErrors.endIPAddress', false);\n  const touchedStartIP = get(\n    state,\n    'form.source.fields.startIPAddress.touched',\n    false,\n  );\n  const touchedEndIP = get(\n    state,\n    'form.source.fields.endIPAddress.touched',\n    false,\n  );\n\n  return {\n    startIP,\n    endIP,\n    isValidStartIP: startIP && touchedStartIP && !startIPError,\n    isValidEndIP: endIP && touchedEndIP && !endIPError,\n  };\n};\n\nconst mapDispatchTopProps = (dispatch) =>\n  bindActionCreators(\n    { customValidateFailure, customValidateSuccess },\n    dispatch,\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchTopProps,\n)(IPRange);\n","import Source from './Source';\nimport SourceForm from './SourceForm';\nimport FileLoader from './FileLoader';\nimport IPInput from './IPInput';\nimport IPRange from './IPRange';\n\nexport { SourceForm, FileLoader, IPInput, IPRange };\nexport default Source;\n","import React, { PureComponent } from 'react';\nimport { Segment, Accordion, Icon } from 'semantic-ui-react';\n\nimport { OptionsForm } from './index';\n\nclass Options extends PureComponent {\n  state = {\n    isOpen: true,\n  };\n\n  handleClick = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render = () => {\n    const { isOpen } = this.state;\n\n    return (\n      <Segment inverted>\n        <Accordion inverted>\n          <Accordion.Title active={isOpen} onClick={this.handleClick}>\n            <Icon name=\"dropdown\" />\n            Discovery Options\n          </Accordion.Title>\n          <Accordion.Content active={isOpen}>\n            <OptionsForm />\n          </Accordion.Content>\n        </Accordion>\n      </Segment>\n    );\n  };\n}\n\nexport default Options;\n","import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport { reduxForm, Field } from 'redux-form';\n\nimport { RFCheckbox } from '../shared';\nimport { OPTIONS } from '../../constants';\n\nconst OptionsForm = () => (\n  <Form inverted>\n    {OPTIONS.map(({ label, value }) => (\n      <Field key={value} name={label} label={label} component={RFCheckbox} />\n    ))}\n  </Form>\n);\n\nexport default reduxForm({\n  form: 'options',\n  destroyOnUnmount: false,\n})(OptionsForm);\n","import Options from './Options';\nimport OptionsForm from './OptionsForm';\n\nexport { OptionsForm };\nexport default Options;\n","import React, { PureComponent } from 'react';\nimport { Segment, Accordion, Icon } from 'semantic-ui-react';\n\nimport { VersionConfig } from './index';\n\nclass SNMPOptions extends PureComponent {\n  state = {\n    isOpen: true,\n  };\n\n  handleClick = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render = () => {\n    const { isOpen } = this.state;\n\n    return (\n      <Segment inverted>\n        <Accordion inverted>\n          <Accordion.Title active={isOpen} onClick={this.handleClick}>\n            <Icon name=\"dropdown\" />\n            Selected Options\n          </Accordion.Title>\n          <Accordion.Content active={isOpen}>\n            <VersionConfig />\n          </Accordion.Content>\n        </Accordion>\n      </Segment>\n    );\n  };\n}\n\nexport default SNMPOptions;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Accordion, Form, Icon } from 'semantic-ui-react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport get from 'lodash.get';\n\nimport { RFRadio, RFInput, RFSelect } from '../shared';\nimport { VERSIONS, ALGORITHMS, SECURITY_OPTIONS } from '../../constants';\n\nimport styles from './VersionConfig.module.css';\n\nclass VersionConfig extends PureComponent {\n  state = {\n    isOpen: true,\n  };\n\n  handleClick = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render = () => {\n    const { isOpen } = this.state;\n    const { version } = this.props;\n\n    return (\n      <Segment inverted>\n        <Accordion inverted>\n          <Accordion.Title\n            active={isOpen}\n            onClick={this.handleClick}\n            className={styles.title}\n          >\n            <Icon name=\"dropdown\" />\n            SNMP Version\n          </Accordion.Title>\n          <Accordion.Content active={isOpen}>\n            <Form inverted>\n              <Form.Field className={styles.radioGroup}>\n                <Field name=\"version\" component={RFRadio} options={VERSIONS} />\n              </Form.Field>\n              {version && (\n                <Field\n                  name={`snmpv${version}.readCommunity`}\n                  component={RFInput}\n                  label=\"Read Community\"\n                  size=\"small\"\n                />\n              )}\n              {version === '3' && (\n                <React.Fragment>\n                  <Field\n                    name={`snmpv${version}.securityOptions`}\n                    component={RFSelect}\n                    placeholder=\"Select security option\"\n                    fluid\n                    selection\n                    options={SECURITY_OPTIONS}\n                  />\n                  <Field\n                    name={`snmpv${version}.contextName`}\n                    component={RFInput}\n                    label=\"Context Name\"\n                    size=\"small\"\n                  />\n                  <Field\n                    name={`snmpv${version}.contextEngineID`}\n                    component={RFInput}\n                    label=\"Context Engine ID\"\n                    size=\"small\"\n                  />\n                  <Form.Field className={styles.radioGroup}>\n                    <Field\n                      name={`snmpv${version}.authenticationAlgorithm.code`}\n                      component={RFRadio}\n                      options={ALGORITHMS}\n                    />\n                  </Form.Field>\n                  <Field\n                    name={`snmpv${version}.authenticationAlgorithm.password`}\n                    component={RFInput}\n                    label=\"Authentication Password\"\n                    size=\"small\"\n                  />\n                </React.Fragment>\n              )}\n            </Form>\n          </Accordion.Content>\n        </Accordion>\n      </Segment>\n    );\n  };\n}\n\nVersionConfig.propTypes = {\n  version: PropTypes.string,\n};\n\nVersionConfig.defaultProps = {\n  version: null,\n};\n\nconst mapStateToProps = (state) => ({\n  version: get(state, 'form.snmpConfig.values.version', null),\n});\n\nconst ConnectedVersionConfig = connect(mapStateToProps)(VersionConfig);\n\nexport default reduxForm({\n  form: 'snmpConfig',\n  destroyOnUnmount: false,\n})(ConnectedVersionConfig);\n","import SNMPOptions from './SNMPOptions';\nimport VersionConfig from './VersionConfig';\n\nexport { VersionConfig };\nexport default SNMPOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Step } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\n\nimport { utils } from '../../helpers';\n\nconst Steps = ({ step }) => (\n  <Step.Group className=\"custom-steps\" ordered>\n    <Step completed={step > 1} active={step === 1} className=\"custom-step\">\n      <Step.Content>\n        <Step.Title\n          className={classnames(\n            { completed: step > 1 },\n            { active: step === 1 },\n          )}\n        >\n          Discovery Source\n        </Step.Title>\n        <Step.Description\n          className={classnames(\n            { completed: step > 1 },\n            { active: step === 1 },\n          )}\n        >\n          1\n        </Step.Description>\n      </Step.Content>\n    </Step>\n    <Step completed={step > 2} active={step === 2} className=\"custom-step\">\n      <Step.Content>\n        <Step.Title\n          className={classnames(\n            { completed: step > 2 },\n            { active: step === 2 },\n          )}\n        >\n          DiscoveryOptions\n        </Step.Title>\n        <Step.Description\n          className={classnames(\n            { completed: step > 2 },\n            { active: step === 2 },\n          )}\n        >\n          2\n        </Step.Description>\n      </Step.Content>\n    </Step>\n    <Step completed={step > 3} active={step === 3} className=\"custom-step\">\n      <Step.Content>\n        <Step.Title\n          className={classnames(\n            { completed: step > 3 },\n            { active: step === 3 },\n          )}\n        >\n          Discovery Input Data\n        </Step.Title>\n        <Step.Description\n          className={classnames(\n            { completed: step > 3 },\n            { active: step === 3 },\n          )}\n        >\n          3\n        </Step.Description>\n      </Step.Content>\n    </Step>\n    <Step completed={step > 4} active={step === 4} className=\"custom-step\">\n      <Step.Content>\n        <Step.Title\n          className={classnames(\n            { completed: step > 4 },\n            { active: step === 4 },\n          )}\n        >\n          Summary\n        </Step.Title>\n        <Step.Description\n          className={classnames(\n            { completed: step > 4 },\n            { active: step === 4 },\n          )}\n        >\n          4\n        </Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n);\n\nStep.propTypes = {\n  step: PropTypes.number,\n};\n\nStep.defaultProps = {\n  step: null,\n};\n\nconst mapStateToProps = ({ form, discover: { open } }) => {\n  const step = utils.getStep(form, open);\n\n  return {\n    step,\n  };\n};\n\nexport default connect(mapStateToProps)(Steps);\n","import Steps from './Steps';\n\nexport default Steps;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\nimport { reset } from 'redux-form';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { discover } from '../../helpers';\nimport { discoverActions } from '../../actions';\nimport { ConfigModal } from './index';\n\nimport styles from './Footer.module.css';\n\n// eslint-disable-next-line\nconst Footer = ({forms, open, config, resetForms, openModal, closeModal}) =>  {\n  const resetAll = () => {\n    Object.keys(forms).forEach((name) => resetForms(name));\n  };\n\n  const onOpenModal = () => {\n    openModal(discover(forms));\n  };\n\n  const onCloseModal = () => {\n    closeModal();\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <Button floated=\"left\" onClick={resetAll}>\n        Clear\n      </Button>\n      <Button floated=\"right\" color=\"green\" onClick={onOpenModal}>\n        Discover\n      </Button>\n      <ConfigModal open={open} data={config} onClose={onCloseModal} />\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  forms: PropTypes.object.isRequired,\n  config: PropTypes.object,\n  open: PropTypes.bool.isRequired,\n  resetForms: PropTypes.func.isRequired,\n  openModal: PropTypes.func.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nFooter.defaultProps = {\n  config: null,\n};\n\nconst mapStateToProps = ({ form, discover: { open, config } }) => ({\n  forms: form,\n  open,\n  config,\n});\n\nconst mapDispatchTopProps = (dispatch) =>\n  bindActionCreators(\n    {\n      resetForms: reset,\n      openModal: discoverActions.openModal,\n      closeModal: discoverActions.closeModal,\n    },\n    dispatch,\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchTopProps,\n)(Footer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'semantic-ui-react';\nimport ReactJson from 'react-json-view';\n\nconst ConfigModal = ({ data, ...rest }) => (\n  <Modal {...rest} closeIcon>\n    <Modal.Header>Configuration JSON</Modal.Header>\n    <Modal.Content scrolling>\n      <Modal.Description>\n        <ReactJson\n          src={data}\n          displayDataTypes={false}\n          displayObjectSize={false}\n          enableClipboard={false}\n          name={false}\n        />\n      </Modal.Description>\n    </Modal.Content>\n  </Modal>\n);\n\nConfigModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  config: PropTypes.object,\n  onClose: PropTypes.func.isRequired,\n  size: PropTypes.string,\n};\n\nConfigModal.defaultProps = {\n  config: null,\n  size: 'small',\n};\n\nexport default ConfigModal;\n","import Footer from './Footer';\nimport ConfigModal from './ConfigModal';\n\nexport { ConfigModal };\nexport default Footer;\n","import Config from './Config';\nimport Source from './source';\nimport Options from './options';\nimport SNMPOptions from './snmp-options';\nimport Steps from './steps';\nimport Footer from './footer';\n\nexport { Source, Options, SNMPOptions, Steps, Footer };\nexport default Config;\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport Config from './components';\nimport configureStore from './store';\n\nconst store = configureStore();\n\nconst App = () => (\n  <Provider store={store}>\n    <Config />\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n  });\n}\n\nserviceWorker.register();\n","import { discoverActions as actions } from '../actions';\n\nconst initialState = {\n  open: false,\n  config: null,\n};\n\nexport default function discover(state = initialState, action) {\n  switch (action.type) {\n    case actions.OPEN_MODAL:\n      return {\n        ...state,\n        open: true,\n        config: action.config,\n      };\n    case actions.CLOSE_MODAL:\n      return {\n        ...state,\n        open: false,\n        config: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport discover from './discover';\nimport { reduxFormActions as actions } from '../actions';\n\nconst form = formReducer.plugin({\n  source: (state, action) => {\n    switch (action.type) {\n      case actions.CUSTOM_VALIDATE_FAILURE:\n        return {\n          ...state,\n          syncErrors: {\n            ...state.syncErrors,\n            [action.field]: action.message,\n          },\n        };\n      case actions.CUSTOM_VALIDATE_SUCCESS:\n        return {\n          ...state,\n          syncErrors: {\n            ...state.syncErrors,\n            [action.field]: undefined,\n          },\n        };\n      default:\n        return state;\n    }\n  },\n});\n\nexport default combineReducers({ discover, form });\n","import { createStore } from 'redux';\n\nimport rootReducer from '../reducers';\n\nexport default function configureStore() {\n  const store = createStore(rootReducer);\n\n  return store;\n}\n"],"sourceRoot":""}